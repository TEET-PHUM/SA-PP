/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Eatinghistory
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ControllersFoodmenu
 */
export interface ControllersFoodmenu {
    /**
     * 
     * @type {string}
     * @memberof ControllersFoodmenu
     */
    addtime?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersFoodmenu
     */
    calories?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersFoodmenu
     */
    foodgroup?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersFoodmenu
     */
    foodmenuing?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersFoodmenu
     */
    foodmenuname?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersFoodmenu
     */
    foodtype?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersFoodmenu
     */
    ownerid?: number;
}

export function ControllersFoodmenuFromJSON(json: any): ControllersFoodmenu {
    return ControllersFoodmenuFromJSONTyped(json, false);
}

export function ControllersFoodmenuFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllersFoodmenu {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addtime': !exists(json, 'addtime') ? undefined : json['addtime'],
        'calories': !exists(json, 'calories') ? undefined : json['calories'],
        'foodgroup': !exists(json, 'foodgroup') ? undefined : json['foodgroup'],
        'foodmenuing': !exists(json, 'foodmenuing') ? undefined : json['foodmenuing'],
        'foodmenuname': !exists(json, 'foodmenuname') ? undefined : json['foodmenuname'],
        'foodtype': !exists(json, 'foodtype') ? undefined : json['foodtype'],
        'ownerid': !exists(json, 'ownerid') ? undefined : json['ownerid'],
    };
}

export function ControllersFoodmenuToJSON(value?: ControllersFoodmenu | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addtime': value.addtime,
        'calories': value.calories,
        'foodgroup': value.foodgroup,
        'foodmenuing': value.foodmenuing,
        'foodmenuname': value.foodmenuname,
        'foodtype': value.foodtype,
        'ownerid': value.ownerid,
    };
}


