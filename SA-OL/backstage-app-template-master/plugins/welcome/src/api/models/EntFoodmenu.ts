/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Eatinghistory
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntFoodmenuEdges,
    EntFoodmenuEdgesFromJSON,
    EntFoodmenuEdgesFromJSONTyped,
    EntFoodmenuEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntFoodmenu
 */
export interface EntFoodmenu {
    /**
     * Addedtime holds the value of the "addedtime" field.
     * @type {string}
     * @memberof EntFoodmenu
     */
    addedtime?: string;
    /**
     * Calories holds the value of the "calories" field.
     * @type {number}
     * @memberof EntFoodmenu
     */
    calories?: number;
    /**
     * 
     * @type {EntFoodmenuEdges}
     * @memberof EntFoodmenu
     */
    edges?: EntFoodmenuEdges;
    /**
     * Groupid holds the value of the "groupid" field.
     * @type {number}
     * @memberof EntFoodmenu
     */
    groupid?: number;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntFoodmenu
     */
    id?: number;
    /**
     * Menuing holds the value of the "menuing" field.
     * @type {string}
     * @memberof EntFoodmenu
     */
    menuing?: string;
    /**
     * Name holds the value of the "name" field.
     * @type {string}
     * @memberof EntFoodmenu
     */
    name?: string;
    /**
     * Typeid holds the value of the "typeid" field.
     * @type {number}
     * @memberof EntFoodmenu
     */
    typeid?: number;
}

export function EntFoodmenuFromJSON(json: any): EntFoodmenu {
    return EntFoodmenuFromJSONTyped(json, false);
}

export function EntFoodmenuFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntFoodmenu {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addedtime': !exists(json, 'addedtime') ? undefined : json['addedtime'],
        'calories': !exists(json, 'calories') ? undefined : json['calories'],
        'edges': !exists(json, 'edges') ? undefined : EntFoodmenuEdgesFromJSON(json['edges']),
        'groupid': !exists(json, 'groupid') ? undefined : json['groupid'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'menuing': !exists(json, 'menuing') ? undefined : json['menuing'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'typeid': !exists(json, 'typeid') ? undefined : json['typeid'],
    };
}

export function EntFoodmenuToJSON(value?: EntFoodmenu | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addedtime': value.addedtime,
        'calories': value.calories,
        'edges': EntFoodmenuEdgesToJSON(value.edges),
        'groupid': value.groupid,
        'id': value.id,
        'menuing': value.menuing,
        'name': value.name,
        'typeid': value.typeid,
    };
}


